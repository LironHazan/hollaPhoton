"use strict";angular.module("myPhotonApp",["ngAnimate","toastr","ngCookies","ngResource","ui.router","ngSanitize","ngTouch","ui.bootstrap","Photon","ngJustGage","n3-line-chart"]).config(["$stateProvider","$urlRouterProvider","$httpProvider",function(a,b,c){b.otherwise("/home"),c.defaults.headers.get||(c.defaults.headers.get={}),c.defaults.headers.get["If-Modified-Since"]="Mon, 26 Jul 1997 05:00:00 GMT",c.defaults.headers.get["Cache-Control"]="no-cache",c.defaults.headers.get.Pragma="no-cache"}]),angular.module("Photon",["ngAnimate","toastr","ngCookies","ngResource","ui.router","ngSanitize","ngTouch","ui.bootstrap"]),angular.module("Photon").config(["$stateProvider",function(a){a.state("Photon",{url:"/home",templateUrl:"Photon/Photon.html",controller:"PhotonCtrl"}).state("Photon.graphs",{url:"/graphs",templateUrl:"Photon/Graphs/graphs.html"})}]),angular.module("Photon").controller("PhotonCtrl",["$rootScope","$scope","$modal","DevicesService","LoginService","toastr","$http","$state","$log",function(a,b,c,d,e,f,g,h,i){function j(a){return g.post("/backend/photoresistor/volts",{id:a})}var k={closeButton:!0,extendedTimeOut:3e3,tapToDismiss:!1,positionClass:"toast-bottom-right"};a.globals={creds:{}},b.devicesList=[],b.logOut=!1,b.volts=0,b.deviceName="deviceName",b.devices=[],b.status={isopen:!1},b.toggled=function(a){},b.toggleDropdown=function(a){a.preventDefault(),a.stopPropagation(),b.status.isopen=!b.status.isopen},b.getSelectedDevice=function(a){i.log("device is now: ",a),g.post("/backend/devices/device-id",{name:a}).then(function(a){var c=a.data.id;i.log("device id is now: ",c);setInterval(function(){b.$apply(function(){j(c).then(function(a){if(200===a.status){var c=parseFloat(a.data.data.result);c=c.toFixed(2),b.volts=c}},function(a){f.error(a.data,"Error While Trying To read volts, Device is not connected",k)})})},3e3)})},b.$state=h,e.getLoggedUser().then(function(a){b.greeting="Hey! you are connected as: "+a.data.name,b.loggedIn=!0,b.showChart=!0,b.devicesTable=!0,b.showGauge=!0}),d.getListDevices().then(function(a){b.tabset=!0,b.showGauge=!0,b.devicesList=a.data.listOfDevices,0===b.devicesList.length&&(b.emptyList=!0),_.each(b.devicesList,function(a){b.devices.push(a.name),a.connected})},function(a){console.log(a),b.loginBtn=!0,b.loggedIn=!1}),b.animationsEnabled=!0,b.open=function(){c.open({animation:b.animationsEnabled,templateUrl:"Photon/Login/LoginModal.html",controller:"LoginCtrl",windowClass:"center-modal",size:"sm",resolve:{item:function(){return b.item}}}),b.toggleAnimation=function(){b.animationsEnabled=!b.animationsEnabled}},a.$on("userLoggedIn",function(){var c=e.getLoginCache();a.globals.creds=c,b.loggedIn=!0,b.loginBtn=!1,b.logOut=!0,b.greeting="Hello! you are connected as: "+c.email,b.showGauge=!0,b.tabset=!0,d.getListDevices().then(function(a){b.showChart=!0,b.devicesList=a.data.listOfDevices,0===b.devicesList.length&&(b.emptyList=!0),_.each(b.devicesList,function(a){b.devices.push(a.name)}),b.devicesTable=!0},function(a){console.log(a),b.loginBtn=!0,b.loggedIn=!1})}),b.logout=function(){e.logout().then(function(a){b.showGauge=!1,b.showChart=!1,b.devicesTable=!1,b.tabset=!1,d.getListDevices().then(function(a){},function(a){b.loginBtn=!0,b.logOut=!1,b.loggedIn=!1,b.devicesList=list.data.listOfDevices})},function(a){})},b.data=[];var l=function(){g.get("/backend/photoresistor/lastHour").then(function(a){var c=[];_.each(a.data,function(a){var b={};b.x=new Date(a.x),b.value=a.value,c.push(b)}),b.data=c})};l(),b.getLineChartData=function(){l()},b.options={axes:{x:{key:"x",type:"date"},y:{type:"linear"}},series:[{y:"value",color:"steelblue",thickness:"2px",type:"column",striped:!0,label:"Volts"}],lineMode:"linear",tension:.7,tooltip:{mode:"scrubber",formatter:function(a,b,c){return"volts"}},drawLegend:!0,drawDots:!0,hideOverflow:!1,columnsHGap:7}}]),angular.module("Photon").controller("LoginCtrl",["$rootScope","$scope","item","$modalInstance","$log","LoginService","toastr",function(a,b,c,d,e,f,g){var h={closeButton:!0,extendedTimeOut:3e3,tapToDismiss:!1,positionClass:"toast-bottom-right"};b.item=c,b.isLogin=!1,b.login=function(){b.item&&b.item.email&&b.item.passwd&&(b.isLogin=!0,f.login({email:b.item.email,passwd:b.item.passwd}).then(function(){f.storeLoginDetails({email:b.item.email,passwd:b.item.passwd}),d.dismiss("login"),a.$emit("userLoggedIn")},function(a){b.isLogin=!1,g.error(a.data,"Error While Trying To Login",h)}))}}]),angular.module("Photon").service("LoginService",["$http",function(a){function b(b){return g=null,a.post("/backend/session/login",b)}function c(a){g=a}function d(){return g}function e(){return a.get("/backend/session/user")}function f(){return a.get("/backend/session/logout")}var g=null;this.getLoginCache=d,this.storeLoginDetails=c,this.login=b,this.getLoggedUser=e,this.logout=f}]),angular.module("Photon").service("DevicesService",["$http",function(a){function b(){return a.get("/backend/devices/listDevices")}function c(b){return a.post("/backend/devices/device",{id:b})}this.getListDevices=b,this.getDevice=c}]),angular.module("Photon").service("SensorFlowService",["$http",function(a){}]);